---
- name: Configuração de modulo para kubernetes
  lineinfile:
    path: /etc/modules-load.d/k8s.conf
    create: yes
    line: br_netfilter
    backup: yes

- name: Habilita o modulo do br_netfilter
  modprobe:
    name: br_netfilter
    state: present

- name: Confiração do iptables
  sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_set: yes
    state: present
    reload: yes
  loop:
    - net.bridge.bridge-nf-call-ip6tables
    - net.bridge.bridge-nf-call-iptables

- name: Download Script Instalacao Docker
  get_url:
    url: "{{ url_docker_script }}"
    dest: /tmp/install_docker.sh
    mode: "0755"

- name: Instalando o Docker
  shell: /tmp/install_docker.sh
  args:
    creates: /usr/bin/docker

- name: Copy file with owner and permissions
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: "0644"
  notify: Restart Docker

- name: Instalação de pre-req
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
    state: present
    update_cache: yes

- name: Adicionando chave gpg do K8S
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg

- name: instala o repo do k8s
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    filename: kubernetes.list

- name: Instalação do kubernetes
  apt:
    pkg:
      - "kubelet={{ k8s_version }}*"
      - "kubeadm={{ k8s_version }}*"
      - "kubectl={{ k8s_version }}*"
    state: present
    update_cache: yes

- name: Configuração do hold dos pacotes do K8S
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Instalando o helm
  shell: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  args:
    creates: /usr/local/bin/helm
  tags:
    - tools
